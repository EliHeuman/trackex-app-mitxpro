{"ast":null,"code":"var _jsxFileName = \"/Users/letiescanciano/Desktop/MITxPRO/trackex-app/live-session/src/components/Transactions/List/index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport * as Yup from \"yup\";\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport Button from \"@material-ui/core/Button\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport { Formik, Form } from \"formik\";\nimport { Debug } from \"../../../aux/Debug\";\nimport data from \"./data.js\";\nimport { TransactionDrawer } from \"../../Drawer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Table = styled.table`\n  width: 100%;\n  text-align: left;\n  padding: 16px 0;\n`;\n_c = Table;\nconst HeadCell = styled.td`\n  padding: 16px 0;\n  width: 20%;\n`;\n_c2 = HeadCell;\nconst TableCell = styled.td`\n  padding: 8px 0;\n  width: 23%;\n  &(:last-of-type) {\n    display: flex;\n    justify-content: flex-end;\n    width: 8%;\n  }\n`;\n_c3 = TableCell;\nconst Amount = styled.p`\n  color: ${({\n  type\n}) => type === \"expense\" ? \"#FF7661\" : \"#00E4C6\"};\n`;\n_c4 = Amount;\nconst Container = styled.div`\n  width: 100%;\n  padding: 64px;\n`;\n_c5 = Container;\nconst AddButtonWrapper = styled.div`\n  display: flex;\n  justify-content: flex-end;\n`;\n_c6 = AddButtonWrapper;\nconst FormWrapper = styled.div`\n  padding: 16px;\n  width: 380px;\n  height: 100vh;\n  overflow: scroll;\n  background-color: #252f3d;\n  color: white;\n`;\nconst RadioOptionsWrapper = styled.div`\n  display: flex;\n  padding-top: 24px;\n`;\nconst FieldsWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n`;\nconst ActionsWrapper = styled.div`\n  display: flex;\n  justify-content: space-evenly;\n`;\nconst categories = [{\n  value: \"eating_out\",\n  label: \"Eating out\"\n}, {\n  value: \"clothes\",\n  label: \"Clothes\"\n}, {\n  value: \"electronics\",\n  label: \"Electronics\"\n}, {\n  value: \"groceries\",\n  label: \"Groceries\"\n}, {\n  value: \"other\",\n  label: \"Other\"\n}, {\n  value: \"salary\",\n  label: \"Salary\"\n}];\nconst types = [{\n  value: \"expense\",\n  label: \"Expense\"\n}, {\n  value: \"income\",\n  label: \"Income\"\n}];\nconst AVAILABLE_MODES = {\n  add: \"add\",\n  edit: \"edit\",\n  read: \"read\"\n};\n\nconst TransactionsList = () => {\n  _s();\n\n  const [transactions, setTransactions] = useState([]);\n  const [openDrawer, setOpenDrawer] = useState(false);\n  const [mode, setMode] = useState(\"add\");\n  const [selectedTransaction, setSelectedTransaction] = useState({});\n  useEffect(() => {\n    setTimeout(() => {\n      setTransactions(data);\n    }, 2000);\n  }, []);\n  const formatter = new Intl.NumberFormat(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\",\n    minimumFractionDigits: 2\n  });\n  const transactionSchema = Yup.object().shape({\n    name: Yup.string().required(\"Required field\"),\n    date: Yup.string().required(\"Required field\"),\n    amount: Yup.number().required(\"Required field\"),\n    category: Yup.string().required(\"Required field\"),\n    type: Yup.string().required(\"Required field\")\n  });\n\n  const handleDelete = id => {\n    const _transactions = [...transactions].filter(transaction => transaction.id !== id);\n\n    setTransactions(_transactions);\n  };\n\n  const handleEdit = id => {\n    //in here we'll edit the selected transaction\n    console.log(\"edit id\", id); // 1. set mode to Edit\n\n    setMode(\"edit\"); // 2. I need to find the selected transaction in my transactions array\n\n    const foundTransaction = transactions.find(transaction => {\n      return transaction.id === id;\n    }); // 3. I need to setSelectedTransaction to the one I found (save it in my state)\n\n    setSelectedTransaction(foundTransaction); // 4. open the drawer and fill out the form with the transaction data\n\n    setOpenDrawer(true);\n  };\n\n  const addTransactionToList = data => {\n    console.log(\"Data\", data);\n    setTransactions([...transactions, { ...data\n    }]);\n  };\n\n  const editTransaction = data => {\n    // console.log(\"data\", data);\n    // 1. Find the transaction index to edit in the array\n    const transactionIndex = transactions.findIndex(transaction => transaction.id === data.id); // 2. Make a copy of our transactions state\n\n    const _transactions = [...transactions]; // 3. Replace the transaction that we need to edit\n\n    _transactions[transactionIndex] = data; // console.log(\"_transactions\", _transactions);\n    // 4. Update our transactions (state) array\n\n    setTransactions(_transactions);\n  };\n\n  const emptyFormInitialValues = {\n    name: \"\",\n    date: \"\",\n    amount: \"\",\n    category: \"eating_out\",\n    type: \"expense\"\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(AddButtonWrapper, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: () => setOpenDrawer(true),\n        children: \"+ Add Transaction\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }, this), transactions.length > 0 ? /*#__PURE__*/_jsxDEV(Table, {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(HeadCell, {\n            children: \"Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(HeadCell, {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(HeadCell, {\n            children: \"Category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(HeadCell, {\n            children: \"Amount\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(HeadCell, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: transactions.map(({\n          id,\n          date,\n          name,\n          category,\n          type,\n          amount\n        }) => {\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: date\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: category\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(Amount, {\n                type: type,\n                children: formatter.format(amount)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: [/*#__PURE__*/_jsxDEV(EditIcon, {\n                style: {\n                  marginRight: \"16px\"\n                },\n                onClick: () => {\n                  handleEdit(id);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(DeleteForeverIcon, {\n                style: {\n                  color: \"#FF7661\"\n                },\n                onClick: () => handleDelete(id)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 19\n            }, this)]\n          }, id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 9\n    }, this) : \"Loading....\", openDrawer && /*#__PURE__*/_jsxDEV(TransactionDrawer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 22\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 178,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TransactionsList, \"iClZmZQXGdOIXkiM7q7Ewyk9loc=\");\n\n_c7 = TransactionsList;\nexport { TransactionsList };\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n\n$RefreshReg$(_c, \"Table\");\n$RefreshReg$(_c2, \"HeadCell\");\n$RefreshReg$(_c3, \"TableCell\");\n$RefreshReg$(_c4, \"Amount\");\n$RefreshReg$(_c5, \"Container\");\n$RefreshReg$(_c6, \"AddButtonWrapper\");\n$RefreshReg$(_c7, \"TransactionsList\");","map":{"version":3,"sources":["/Users/letiescanciano/Desktop/MITxPRO/trackex-app/live-session/src/components/Transactions/List/index.jsx"],"names":["React","useState","useEffect","styled","Yup","DeleteForeverIcon","EditIcon","Button","Drawer","TextField","Radio","RadioGroup","FormControlLabel","FormControl","FormLabel","Formik","Form","Debug","data","TransactionDrawer","Table","table","HeadCell","td","TableCell","Amount","p","type","Container","div","AddButtonWrapper","FormWrapper","RadioOptionsWrapper","FieldsWrapper","ActionsWrapper","categories","value","label","types","AVAILABLE_MODES","add","edit","read","TransactionsList","transactions","setTransactions","openDrawer","setOpenDrawer","mode","setMode","selectedTransaction","setSelectedTransaction","setTimeout","formatter","Intl","NumberFormat","style","currency","minimumFractionDigits","transactionSchema","object","shape","name","string","required","date","amount","number","category","handleDelete","id","_transactions","filter","transaction","handleEdit","console","log","foundTransaction","find","addTransactionToList","editTransaction","transactionIndex","findIndex","emptyFormInitialValues","length","map","format","marginRight","color"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nimport styled from \"styled-components\";\nimport * as Yup from \"yup\";\n\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport Button from \"@material-ui/core/Button\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\n\nimport { Formik, Form } from \"formik\";\n\nimport { Debug } from \"../../../aux/Debug\";\nimport data from \"./data.js\";\n\nimport { TransactionDrawer } from \"../../Drawer\";\nconst Table = styled.table`\n  width: 100%;\n  text-align: left;\n  padding: 16px 0;\n`;\nconst HeadCell = styled.td`\n  padding: 16px 0;\n  width: 20%;\n`;\n\nconst TableCell = styled.td`\n  padding: 8px 0;\n  width: 23%;\n  &(:last-of-type) {\n    display: flex;\n    justify-content: flex-end;\n    width: 8%;\n  }\n`;\n\nconst Amount = styled.p`\n  color: ${({ type }) => (type === \"expense\" ? \"#FF7661\" : \"#00E4C6\")};\n`;\n\nconst Container = styled.div`\n  width: 100%;\n  padding: 64px;\n`;\n\nconst AddButtonWrapper = styled.div`\n  display: flex;\n  justify-content: flex-end;\n`;\n\nconst FormWrapper = styled.div`\n  padding: 16px;\n  width: 380px;\n  height: 100vh;\n  overflow: scroll;\n  background-color: #252f3d;\n  color: white;\n`;\n\nconst RadioOptionsWrapper = styled.div`\n  display: flex;\n  padding-top: 24px;\n`;\n\nconst FieldsWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n`;\n\nconst ActionsWrapper = styled.div`\n  display: flex;\n  justify-content: space-evenly;\n`;\n\nconst categories = [\n  { value: \"eating_out\", label: \"Eating out\" },\n  { value: \"clothes\", label: \"Clothes\" },\n  { value: \"electronics\", label: \"Electronics\" },\n  { value: \"groceries\", label: \"Groceries\" },\n  { value: \"other\", label: \"Other\" },\n  { value: \"salary\", label: \"Salary\" },\n];\n\nconst types = [\n  { value: \"expense\", label: \"Expense\" },\n  { value: \"income\", label: \"Income\" },\n];\n\nconst AVAILABLE_MODES = {\n  add: \"add\",\n  edit: \"edit\",\n  read: \"read\",\n};\n\nconst TransactionsList = () => {\n  const [transactions, setTransactions] = useState([]);\n  const [openDrawer, setOpenDrawer] = useState(false);\n  const [mode, setMode] = useState(\"add\");\n  const [selectedTransaction, setSelectedTransaction] = useState({});\n\n  useEffect(() => {\n    setTimeout(() => {\n      setTransactions(data);\n    }, 2000);\n  }, []);\n\n  const formatter = new Intl.NumberFormat(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\",\n    minimumFractionDigits: 2,\n  });\n\n  const transactionSchema = Yup.object().shape({\n    name: Yup.string().required(\"Required field\"),\n    date: Yup.string().required(\"Required field\"),\n    amount: Yup.number().required(\"Required field\"),\n    category: Yup.string().required(\"Required field\"),\n    type: Yup.string().required(\"Required field\"),\n  });\n\n  const handleDelete = (id) => {\n    const _transactions = [...transactions].filter(\n      (transaction) => transaction.id !== id\n    );\n    setTransactions(_transactions);\n  };\n\n  const handleEdit = (id) => {\n    //in here we'll edit the selected transaction\n    console.log(\"edit id\", id);\n    // 1. set mode to Edit\n    setMode(\"edit\");\n    // 2. I need to find the selected transaction in my transactions array\n    const foundTransaction = transactions.find((transaction) => {\n      return transaction.id === id;\n    });\n    // 3. I need to setSelectedTransaction to the one I found (save it in my state)\n    setSelectedTransaction(foundTransaction);\n    // 4. open the drawer and fill out the form with the transaction data\n    setOpenDrawer(true);\n  };\n  const addTransactionToList = (data) => {\n    console.log(\"Data\", data);\n    setTransactions([...transactions, { ...data }]);\n  };\n\n  const editTransaction = (data) => {\n    // console.log(\"data\", data);\n    // 1. Find the transaction index to edit in the array\n    const transactionIndex = transactions.findIndex(\n      (transaction) => transaction.id === data.id\n    );\n    // 2. Make a copy of our transactions state\n    const _transactions = [...transactions];\n    // 3. Replace the transaction that we need to edit\n    _transactions[transactionIndex] = data;\n\n    // console.log(\"_transactions\", _transactions);\n    // 4. Update our transactions (state) array\n    setTransactions(_transactions);\n  };\n  const emptyFormInitialValues = {\n    name: \"\",\n    date: \"\",\n    amount: \"\",\n    category: \"eating_out\",\n    type: \"expense\",\n  };\n\n  return (\n    <Container>\n      <AddButtonWrapper>\n        <Button\n          variant='contained'\n          color='primary'\n          onClick={() => setOpenDrawer(true)}\n        >\n          + Add Transaction\n        </Button>\n      </AddButtonWrapper>\n      {transactions.length > 0 ? (\n        <Table>\n          <thead>\n            <tr>\n              <HeadCell>Date</HeadCell>\n              <HeadCell>Name</HeadCell>\n              <HeadCell>Category</HeadCell>\n              <HeadCell>Amount</HeadCell>\n              <HeadCell></HeadCell>\n            </tr>\n          </thead>\n          <tbody>\n            {transactions.map(({ id, date, name, category, type, amount }) => {\n              return (\n                <tr key={id}>\n                  <TableCell>{date}</TableCell>\n                  <TableCell>{name}</TableCell>\n                  <TableCell>{category}</TableCell>\n                  <TableCell>\n                    <Amount type={type}>{formatter.format(amount)}</Amount>\n                  </TableCell>\n                  <TableCell>\n                    <EditIcon\n                      style={{ marginRight: \"16px\" }}\n                      onClick={() => {\n                        handleEdit(id);\n                      }}\n                    />\n                    <DeleteForeverIcon\n                      style={{ color: \"#FF7661\" }}\n                      onClick={() => handleDelete(id)}\n                    />\n                  </TableCell>\n                </tr>\n              );\n            })}\n          </tbody>\n        </Table>\n      ) : (\n        \"Loading....\"\n      )}\n\n      {openDrawer && <TransactionDrawer />}\n    </Container>\n  );\n};\n\nexport { TransactionsList };\n"]},"metadata":{},"sourceType":"module"}