{"ast":null,"code":"var _jsxFileName = \"/Users/letiescanciano/Desktop/MITxPRO/trackex-app/live-session/frontend/src/components/Drawer/index.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport Button from \"@material-ui/core/Button\";\nimport styled from \"styled-components\";\nimport * as Yup from \"yup\";\nimport { Formik, Form } from \"formik\";\nimport { Debug } from \"../../aux/Debug\";\nimport { TrackexContext } from \"../../trackexContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst FormWrapper = styled.div`\n  padding: 16px;\n  width: 380px;\n  height: 100vh;\n  overflow: scroll;\n  background-color: #252f3d;\n  color: white;\n`;\n_c = FormWrapper;\nconst RadioOptionsWrapper = styled.div`\n  display: flex;\n  padding-top: 24px;\n`;\n_c2 = RadioOptionsWrapper;\nconst FieldsWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n`;\n_c3 = FieldsWrapper;\nconst ActionsWrapper = styled.div`\n  display: flex;\n  justify-content: space-evenly;\n`;\n_c4 = ActionsWrapper;\n\nconst TransactionDrawer = props => {\n  _s();\n\n  console.log(\"TransactionDrawer props\", props);\n  const {\n    mode,\n    open,\n    onClose,\n    transaction,\n    addTransaction,\n    editTransaction\n  } = props;\n  const {\n    categories,\n    types\n  } = React.useContext(TrackexContext);\n  const emptyFormInitialValues = {\n    name: \"\",\n    date: \"\",\n    amount: \"\",\n    category: \"eating_out\",\n    type: \"expense\"\n  };\n  const transactionSchema = Yup.object().shape({\n    name: Yup.string().required(\"Required field\"),\n    date: Yup.string().required(\"Required field\"),\n    amount: Yup.number().required(\"Required field\"),\n    category: Yup.string().required(\"Required field\"),\n    type: Yup.string().required(\"Required field\")\n  });\n  return /*#__PURE__*/_jsxDEV(Drawer, {\n    anchor: \"right\",\n    open: open,\n    onClose: onClose,\n    children: /*#__PURE__*/_jsxDEV(FormWrapper, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [mode === \"add\" ? \"New\" : \"Edit\", \" transaction\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: mode === \"add\" ? emptyFormInitialValues : transaction,\n        validationSchema: transactionSchema,\n        onSubmit: (values, {\n          setSubmitting\n        }) => {\n          mode === \"add\" ? addTransaction(values) : editTransaction(values);\n          setSubmitting(false);\n          onClose();\n        },\n        children: ({\n          values,\n          handleChange,\n          touched,\n          errors,\n          isValid,\n          isSubmitting\n        }) => /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            children: [/*#__PURE__*/_jsxDEV(FieldsWrapper, {\n              children: [/*#__PURE__*/_jsxDEV(TextField, {\n                fullWidth: true,\n                id: \"name\",\n                name: \"name\",\n                label: \"Name\",\n                value: values.name,\n                onChange: handleChange,\n                error: touched.name && Boolean(errors.name),\n                helperText: touched.name && errors.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                fullWidth: true,\n                id: \"date\",\n                name: \"date\",\n                label: \"Date\",\n                value: values.date,\n                onChange: handleChange,\n                error: touched.date && Boolean(errors.date),\n                helperText: touched.date && errors.date\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                fullWidth: true,\n                id: \"amount\",\n                type: \"number\",\n                name: \"amount\",\n                label: \"Amount\",\n                value: values.amount,\n                onChange: handleChange,\n                error: touched.amount && Boolean(errors.amount),\n                helperText: touched.amount && errors.amount\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(RadioOptionsWrapper, {\n              children: [/*#__PURE__*/_jsxDEV(FormControl, {\n                component: \"fieldset\",\n                children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                  component: \"legend\",\n                  children: \"Category\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 122,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(RadioGroup, {\n                  \"aria-label\": \"category\",\n                  name: \"category\",\n                  value: values.category,\n                  onChange: handleChange,\n                  children: categories.map(category => /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                    value: category.value,\n                    control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 132,\n                      columnNumber: 36\n                    }, this),\n                    label: category.label\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 130,\n                    columnNumber: 25\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 123,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                component: \"fieldset\",\n                children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                  component: \"legend\",\n                  children: \"Type\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 139,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(RadioGroup, {\n                  \"aria-label\": \"type\",\n                  name: \"type\",\n                  value: values.type,\n                  onChange: handleChange,\n                  children: types.map(({\n                    value,\n                    label\n                  }) => /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                    value: value,\n                    control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 149,\n                      columnNumber: 36\n                    }, this),\n                    label: label\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 147,\n                    columnNumber: 25\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 140,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(ActionsWrapper, {\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                variant: \"outlined\",\n                color: \"primary\",\n                onClick: onClose,\n                children: \"Cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                color: \"primary\",\n                type: \"submit\",\n                disabled: !isValid || isSubmitting,\n                children: \"Save\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }, this)\n        }, void 0, false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TransactionDrawer, \"Mlz8JtTLmpfRC0cmxIkxkkrIi3g=\");\n\n_c5 = TransactionDrawer;\nexport { TransactionDrawer };\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"FormWrapper\");\n$RefreshReg$(_c2, \"RadioOptionsWrapper\");\n$RefreshReg$(_c3, \"FieldsWrapper\");\n$RefreshReg$(_c4, \"ActionsWrapper\");\n$RefreshReg$(_c5, \"TransactionDrawer\");","map":{"version":3,"sources":["/Users/letiescanciano/Desktop/MITxPRO/trackex-app/live-session/frontend/src/components/Drawer/index.jsx"],"names":["React","Drawer","TextField","Radio","RadioGroup","FormControlLabel","FormControl","FormLabel","Button","styled","Yup","Formik","Form","Debug","TrackexContext","FormWrapper","div","RadioOptionsWrapper","FieldsWrapper","ActionsWrapper","TransactionDrawer","props","console","log","mode","open","onClose","transaction","addTransaction","editTransaction","categories","types","useContext","emptyFormInitialValues","name","date","amount","category","type","transactionSchema","object","shape","string","required","number","values","setSubmitting","handleChange","touched","errors","isValid","isSubmitting","Boolean","map","value","label"],"mappings":"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","sourcesContent":["import React from \"react\";\n\nimport Drawer from \"@material-ui/core/Drawer\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport Button from \"@material-ui/core/Button\";\nimport styled from \"styled-components\";\n\nimport * as Yup from \"yup\";\nimport { Formik, Form } from \"formik\";\nimport { Debug } from \"../../aux/Debug\";\nimport { TrackexContext } from \"../../trackexContext\";\nconst FormWrapper = styled.div`\n  padding: 16px;\n  width: 380px;\n  height: 100vh;\n  overflow: scroll;\n  background-color: #252f3d;\n  color: white;\n`;\n\nconst RadioOptionsWrapper = styled.div`\n  display: flex;\n  padding-top: 24px;\n`;\n\nconst FieldsWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n`;\n\nconst ActionsWrapper = styled.div`\n  display: flex;\n  justify-content: space-evenly;\n`;\n\nconst TransactionDrawer = (props) => {\n  console.log(\"TransactionDrawer props\", props);\n  const { mode, open, onClose, transaction, addTransaction, editTransaction } =\n    props;\n\n  const { categories, types } = React.useContext(TrackexContext);\n\n  const emptyFormInitialValues = {\n    name: \"\",\n    date: \"\",\n    amount: \"\",\n    category: \"eating_out\",\n    type: \"expense\",\n  };\n  const transactionSchema = Yup.object().shape({\n    name: Yup.string().required(\"Required field\"),\n    date: Yup.string().required(\"Required field\"),\n    amount: Yup.number().required(\"Required field\"),\n    category: Yup.string().required(\"Required field\"),\n    type: Yup.string().required(\"Required field\"),\n  });\n\n  return (\n    <Drawer anchor='right' open={open} onClose={onClose}>\n      <FormWrapper>\n        <h2>{mode === \"add\" ? \"New\" : \"Edit\"} transaction</h2>\n        <Formik\n          initialValues={mode === \"add\" ? emptyFormInitialValues : transaction}\n          validationSchema={transactionSchema}\n          onSubmit={(values, { setSubmitting }) => {\n            mode === \"add\" ? addTransaction(values) : editTransaction(values);\n            setSubmitting(false);\n            onClose();\n          }}\n        >\n          {({\n            values,\n            handleChange,\n            touched,\n            errors,\n            isValid,\n            isSubmitting,\n          }) => (\n            <>\n              <Form>\n                <FieldsWrapper>\n                  <TextField\n                    fullWidth\n                    id='name'\n                    name='name'\n                    label='Name'\n                    value={values.name}\n                    onChange={handleChange}\n                    error={touched.name && Boolean(errors.name)}\n                    helperText={touched.name && errors.name}\n                  />\n                  <TextField\n                    fullWidth\n                    id='date'\n                    name='date'\n                    label='Date'\n                    value={values.date}\n                    onChange={handleChange}\n                    error={touched.date && Boolean(errors.date)}\n                    helperText={touched.date && errors.date}\n                  />\n                  <TextField\n                    fullWidth\n                    id='amount'\n                    type='number'\n                    name='amount'\n                    label='Amount'\n                    value={values.amount}\n                    onChange={handleChange}\n                    error={touched.amount && Boolean(errors.amount)}\n                    helperText={touched.amount && errors.amount}\n                  />\n                </FieldsWrapper>\n                <RadioOptionsWrapper>\n                  <FormControl component='fieldset'>\n                    <FormLabel component='legend'>Category</FormLabel>\n                    <RadioGroup\n                      aria-label='category'\n                      name='category'\n                      value={values.category}\n                      onChange={handleChange}\n                    >\n                      {categories.map((category) => (\n                        <FormControlLabel\n                          value={category.value}\n                          control={<Radio />}\n                          label={category.label}\n                        />\n                      ))}\n                    </RadioGroup>\n                  </FormControl>\n                  <FormControl component='fieldset'>\n                    <FormLabel component='legend'>Type</FormLabel>\n                    <RadioGroup\n                      aria-label='type'\n                      name='type'\n                      value={values.type}\n                      onChange={handleChange}\n                    >\n                      {types.map(({ value, label }) => (\n                        <FormControlLabel\n                          value={value}\n                          control={<Radio />}\n                          label={label}\n                        />\n                      ))}\n                    </RadioGroup>\n                  </FormControl>\n                </RadioOptionsWrapper>\n                <ActionsWrapper>\n                  <Button variant='outlined' color='primary' onClick={onClose}>\n                    Cancel\n                  </Button>\n                  <Button\n                    variant='contained'\n                    color='primary'\n                    type='submit'\n                    disabled={!isValid || isSubmitting}\n                  >\n                    Save\n                  </Button>\n                </ActionsWrapper>\n              </Form>\n              {/* <Debug /> */}\n            </>\n          )}\n        </Formik>\n      </FormWrapper>\n    </Drawer>\n  );\n};\n\nexport { TransactionDrawer };\n"]},"metadata":{},"sourceType":"module"}