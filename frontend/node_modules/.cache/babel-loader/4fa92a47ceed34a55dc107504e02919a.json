{"ast":null,"code":"var _jsxFileName = \"/Users/letiescanciano/Desktop/MITxPRO/trackex-app/live-session/src/components/Transactions/List/index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport Button from \"@material-ui/core/Button\";\nimport Input from \"@material-ui/core/Input\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport data from \"./data.js\";\nimport { TransactionDrawer } from \"../../Drawer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Table = styled.table`\n  width: 80%;\n  text-align: left;\n  padding: 16px 0;\n`;\n_c = Table;\nconst HeadCell = styled.td`\n  padding: 16px 0;\n  width: 20%;\n`;\n_c2 = HeadCell;\nconst TableCell = styled.td`\n  padding: 8px 0;\n  width: 23%;\n  &(:last-of-type) {\n    display: flex;\n    justify-content: flex-end;\n    width: 8%;\n  }\n`;\n_c3 = TableCell;\nconst Amount = styled.p`\n  color: ${({\n  type\n}) => type === \"expense\" ? \"#FF7661\" : \"#00E4C6\"};\n`;\n_c4 = Amount;\nconst Container = styled.div`\n  width: 100%;\n  padding: 64px;\n`;\n_c5 = Container;\nconst ActionsWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n_c6 = ActionsWrapper;\nconst Main = styled.div`\n  width: 100%;\n  display: flex;\n  padding-top: 32px;\n`;\n_c7 = Main;\nconst FiltersContainer = styled.div`\n  width: 20%;\n`;\n_c8 = FiltersContainer;\nconst AVAILABLE_MODES = {\n  add: \"add\",\n  edit: \"edit\",\n  read: \"read\"\n};\n\nconst TransactionsList = () => {\n  _s();\n\n  const [transactions, setTransactions] = useState([]);\n  const [openDrawer, setOpenDrawer] = useState(false);\n  const [mode, setMode] = useState(\"add\");\n  const [selectedTransaction, setSelectedTransaction] = useState({});\n  const [search, setSearch] = useState(\"\");\n  const [filteredTransactions, setFilteredTransactions] = useState([]);\n  useEffect(() => {\n    setTimeout(() => {\n      setTransactions(data);\n    }, 2000);\n  }, []);\n  useEffect(() => {\n    setFilteredTransactions(transactions);\n  }, [transactions]);\n  useEffect(() => {\n    console.log(\"useEffect search\", search);\n    filterByName(search);\n  }, [search]);\n  const formatter = new Intl.NumberFormat(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\",\n    minimumFractionDigits: 2\n  });\n\n  const handleDelete = id => {\n    const _transactions = [...transactions].filter(transaction => transaction.id !== id);\n\n    setTransactions(_transactions);\n  };\n\n  const handleEdit = id => {\n    //in here we'll edit the selected transaction\n    console.log(\"edit id\", id); // 1. set mode to Edit\n\n    setMode(\"edit\"); // 2. I need to find the selected transaction in my transactions array\n\n    const foundTransaction = transactions.find(transaction => {\n      return transaction.id === id;\n    }); // 3. I need to setSelectedTransaction to the one I found (save it in my state)\n\n    setSelectedTransaction(foundTransaction); // 4. open the drawer and fill out the form with the transaction data\n\n    setOpenDrawer(true);\n  };\n\n  const addTransactionToList = data => {\n    console.log(\"Data\", data);\n    setTransactions([...transactions, { ...data\n    }]);\n  };\n\n  const editTransaction = data => {\n    // console.log(\"data\", data);\n    // 1. Find the transaction index to edit in the array\n    const transactionIndex = transactions.findIndex(transaction => transaction.id === data.id); // 2. Make a copy of our transactions state\n\n    const _transactions = [...transactions]; // 3. Replace the transaction that we need to edit\n\n    _transactions[transactionIndex] = data; // console.log(\"_transactions\", _transactions);\n    // 4. Update our transactions (state) array\n\n    setTransactions(_transactions);\n  };\n\n  const filterByName = search => {\n    console.log(\"filterByName search\", search);\n\n    const _filteredTransactions = transactions.filter(transaction => {\n      return transaction.name.toLowerCase().includes(search.toLowerCase());\n    });\n\n    setFilteredTransactions(_filteredTransactions);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(ActionsWrapper, {\n      children: [/*#__PURE__*/_jsxDEV(FormControl, {\n        style: {\n          width: \"75%\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          id: \"search\",\n          value: search,\n          startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n            position: \"start\",\n            children: /*#__PURE__*/_jsxDEV(SearchIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 15\n          }, this),\n          onChange: event => {\n            console.log(event.target.value);\n            setSearch(event.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: () => setOpenDrawer(true),\n        children: \"+ Add Transaction\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Main, {\n      children: [/*#__PURE__*/_jsxDEV(FiltersContainer, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Filters\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \" Filter by categoty\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this), transactions.length > 0 ? /*#__PURE__*/_jsxDEV(Table, {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(HeadCell, {\n              children: \"Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(HeadCell, {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(HeadCell, {\n              children: \"Category\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(HeadCell, {\n              children: \"Amount\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(HeadCell, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: filteredTransactions.map(({\n            id,\n            date,\n            name,\n            category,\n            type,\n            amount\n          }) => {\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: date\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 194,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: category\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: /*#__PURE__*/_jsxDEV(Amount, {\n                  type: type,\n                  children: formatter.format(amount)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 198,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: [/*#__PURE__*/_jsxDEV(EditIcon, {\n                  style: {\n                    marginRight: \"16px\"\n                  },\n                  onClick: () => {\n                    handleEdit(id);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 201,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(DeleteForeverIcon, {\n                  style: {\n                    color: \"#FF7661\"\n                  },\n                  onClick: () => handleDelete(id)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 207,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 23\n              }, this)]\n            }, id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 21\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 11\n      }, this) : \"Loading....\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this), openDrawer && /*#__PURE__*/_jsxDEV(TransactionDrawer, {\n      mode: mode,\n      open: openDrawer,\n      onClose: () => setOpenDrawer(false),\n      transaction: selectedTransaction,\n      addTransaction: addTransactionToList,\n      editTransaction: editTransaction\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 148,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TransactionsList, \"xUN69N0KQBKUTLw0WPv/BPLjLtQ=\");\n\n_c9 = TransactionsList;\nexport { TransactionsList };\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9;\n\n$RefreshReg$(_c, \"Table\");\n$RefreshReg$(_c2, \"HeadCell\");\n$RefreshReg$(_c3, \"TableCell\");\n$RefreshReg$(_c4, \"Amount\");\n$RefreshReg$(_c5, \"Container\");\n$RefreshReg$(_c6, \"ActionsWrapper\");\n$RefreshReg$(_c7, \"Main\");\n$RefreshReg$(_c8, \"FiltersContainer\");\n$RefreshReg$(_c9, \"TransactionsList\");","map":{"version":3,"sources":["/Users/letiescanciano/Desktop/MITxPRO/trackex-app/live-session/src/components/Transactions/List/index.jsx"],"names":["React","useState","useEffect","styled","DeleteForeverIcon","EditIcon","Button","Input","InputAdornment","FormControl","SearchIcon","data","TransactionDrawer","Table","table","HeadCell","td","TableCell","Amount","p","type","Container","div","ActionsWrapper","Main","FiltersContainer","AVAILABLE_MODES","add","edit","read","TransactionsList","transactions","setTransactions","openDrawer","setOpenDrawer","mode","setMode","selectedTransaction","setSelectedTransaction","search","setSearch","filteredTransactions","setFilteredTransactions","setTimeout","console","log","filterByName","formatter","Intl","NumberFormat","style","currency","minimumFractionDigits","handleDelete","id","_transactions","filter","transaction","handleEdit","foundTransaction","find","addTransactionToList","editTransaction","transactionIndex","findIndex","_filteredTransactions","name","toLowerCase","includes","width","event","target","value","length","map","date","category","amount","format","marginRight","color"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nimport styled from \"styled-components\";\n\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport Button from \"@material-ui/core/Button\";\n\nimport Input from \"@material-ui/core/Input\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport SearchIcon from \"@material-ui/icons/Search\";\n\nimport data from \"./data.js\";\n\nimport { TransactionDrawer } from \"../../Drawer\";\nconst Table = styled.table`\n  width: 80%;\n  text-align: left;\n  padding: 16px 0;\n`;\nconst HeadCell = styled.td`\n  padding: 16px 0;\n  width: 20%;\n`;\n\nconst TableCell = styled.td`\n  padding: 8px 0;\n  width: 23%;\n  &(:last-of-type) {\n    display: flex;\n    justify-content: flex-end;\n    width: 8%;\n  }\n`;\n\nconst Amount = styled.p`\n  color: ${({ type }) => (type === \"expense\" ? \"#FF7661\" : \"#00E4C6\")};\n`;\n\nconst Container = styled.div`\n  width: 100%;\n  padding: 64px;\n`;\n\nconst ActionsWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst Main = styled.div`\n  width: 100%;\n  display: flex;\n  padding-top: 32px;\n`;\nconst FiltersContainer = styled.div`\n  width: 20%;\n`;\n\nconst AVAILABLE_MODES = {\n  add: \"add\",\n  edit: \"edit\",\n  read: \"read\",\n};\n\nconst TransactionsList = () => {\n  const [transactions, setTransactions] = useState([]);\n  const [openDrawer, setOpenDrawer] = useState(false);\n  const [mode, setMode] = useState(\"add\");\n  const [selectedTransaction, setSelectedTransaction] = useState({});\n  const [search, setSearch] = useState(\"\");\n  const [filteredTransactions, setFilteredTransactions] = useState([]);\n\n  useEffect(() => {\n    setTimeout(() => {\n      setTransactions(data);\n    }, 2000);\n  }, []);\n\n  useEffect(() => {\n    setFilteredTransactions(transactions);\n  }, [transactions]);\n\n  useEffect(() => {\n    console.log(\"useEffect search\", search);\n    filterByName(search);\n  }, [search]);\n\n  const formatter = new Intl.NumberFormat(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\",\n    minimumFractionDigits: 2,\n  });\n\n  const handleDelete = (id) => {\n    const _transactions = [...transactions].filter(\n      (transaction) => transaction.id !== id\n    );\n    setTransactions(_transactions);\n  };\n\n  const handleEdit = (id) => {\n    //in here we'll edit the selected transaction\n    console.log(\"edit id\", id);\n    // 1. set mode to Edit\n    setMode(\"edit\");\n    // 2. I need to find the selected transaction in my transactions array\n    const foundTransaction = transactions.find((transaction) => {\n      return transaction.id === id;\n    });\n    // 3. I need to setSelectedTransaction to the one I found (save it in my state)\n    setSelectedTransaction(foundTransaction);\n    // 4. open the drawer and fill out the form with the transaction data\n    setOpenDrawer(true);\n  };\n  const addTransactionToList = (data) => {\n    console.log(\"Data\", data);\n    setTransactions([...transactions, { ...data }]);\n  };\n\n  const editTransaction = (data) => {\n    // console.log(\"data\", data);\n    // 1. Find the transaction index to edit in the array\n    const transactionIndex = transactions.findIndex(\n      (transaction) => transaction.id === data.id\n    );\n    // 2. Make a copy of our transactions state\n    const _transactions = [...transactions];\n    // 3. Replace the transaction that we need to edit\n    _transactions[transactionIndex] = data;\n\n    // console.log(\"_transactions\", _transactions);\n    // 4. Update our transactions (state) array\n    setTransactions(_transactions);\n  };\n\n  const filterByName = (search) => {\n    console.log(\"filterByName search\", search);\n\n    const _filteredTransactions = transactions.filter((transaction) => {\n      return transaction.name.toLowerCase().includes(search.toLowerCase());\n    });\n\n    setFilteredTransactions(_filteredTransactions);\n  };\n\n  return (\n    <Container>\n      <ActionsWrapper>\n        <FormControl style={{ width: \"75%\" }}>\n          <Input\n            id='search'\n            value={search}\n            startAdornment={\n              <InputAdornment position='start'>\n                <SearchIcon />\n              </InputAdornment>\n            }\n            onChange={(event) => {\n              console.log(event.target.value);\n              setSearch(event.target.value);\n            }}\n          />\n        </FormControl>\n        <Button\n          variant='contained'\n          color='primary'\n          onClick={() => setOpenDrawer(true)}\n        >\n          + Add Transaction\n        </Button>\n      </ActionsWrapper>\n      <Main>\n        <FiltersContainer>\n          <h2>Filters</h2>\n          <h3> Filter by categoty</h3>\n        </FiltersContainer>\n        {transactions.length > 0 ? (\n          <Table>\n            <thead>\n              <tr>\n                <HeadCell>Date</HeadCell>\n                <HeadCell>Name</HeadCell>\n                <HeadCell>Category</HeadCell>\n                <HeadCell>Amount</HeadCell>\n                <HeadCell></HeadCell>\n              </tr>\n            </thead>\n            <tbody>\n              {filteredTransactions.map(\n                ({ id, date, name, category, type, amount }) => {\n                  return (\n                    <tr key={id}>\n                      <TableCell>{date}</TableCell>\n                      <TableCell>{name}</TableCell>\n                      <TableCell>{category}</TableCell>\n                      <TableCell>\n                        <Amount type={type}>{formatter.format(amount)}</Amount>\n                      </TableCell>\n                      <TableCell>\n                        <EditIcon\n                          style={{ marginRight: \"16px\" }}\n                          onClick={() => {\n                            handleEdit(id);\n                          }}\n                        />\n                        <DeleteForeverIcon\n                          style={{ color: \"#FF7661\" }}\n                          onClick={() => handleDelete(id)}\n                        />\n                      </TableCell>\n                    </tr>\n                  );\n                }\n              )}\n            </tbody>\n          </Table>\n        ) : (\n          \"Loading....\"\n        )}\n      </Main>\n      {openDrawer && (\n        <TransactionDrawer\n          mode={mode}\n          open={openDrawer}\n          onClose={() => setOpenDrawer(false)}\n          transaction={selectedTransaction}\n          addTransaction={addTransactionToList}\n          editTransaction={editTransaction}\n        />\n      )}\n    </Container>\n  );\n};\n\nexport { TransactionsList };\n"]},"metadata":{},"sourceType":"module"}