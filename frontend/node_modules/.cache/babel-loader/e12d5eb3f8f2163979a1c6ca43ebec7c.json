{"ast":null,"code":"var _jsxFileName = \"/Users/letiescanciano/Desktop/MITxPRO/trackex-app/live-session/src/components/Transactions/List/index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport * as Yup from \"yup\";\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport Button from \"@material-ui/core/Button\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport { Formik, Form } from \"formik\";\nimport { Debug } from \"../../../aux/Debug\";\nimport data from \"./data.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Table = styled.table`\n  width: 100%;\n  text-align: left;\n  padding: 16px 0;\n`;\n_c = Table;\nconst HeadCell = styled.td`\n  padding: 16px 0;\n  width: 20%;\n`;\n_c2 = HeadCell;\nconst TableCell = styled.td`\n  padding: 8px 0;\n  width: 23%;\n  &(:last-of-type) {\n    display: flex;\n    justify-content: flex-end;\n    width: 8%;\n  }\n`;\n_c3 = TableCell;\nconst Amount = styled.p`\n  color: ${({\n  type\n}) => type === \"expense\" ? \"#FF7661\" : \"#00E4C6\"};\n`;\n_c4 = Amount;\nconst Container = styled.div`\n  width: 100%;\n  padding: 64px;\n`;\n_c5 = Container;\nconst AddButtonWrapper = styled.div`\n  display: flex;\n  justify-content: flex-end;\n`;\n_c6 = AddButtonWrapper;\nconst FormWrapper = styled.div`\n  padding: 16px;\n  width: 380px;\n  height: 100vh;\n  overflow: scroll;\n  background-color: #252f3d;\n  color: white;\n`;\n_c7 = FormWrapper;\nconst RadioOptionsWrapper = styled.div`\n  display: flex;\n  padding-top: 24px;\n`;\n_c8 = RadioOptionsWrapper;\nconst FieldsWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n`;\n_c9 = FieldsWrapper;\nconst ActionsWrapper = styled.div`\n  display: flex;\n  justify-content: space-evenly;\n`;\n_c10 = ActionsWrapper;\nconst categories = [{\n  value: \"eating_out\",\n  label: \"Eating out\"\n}, {\n  value: \"clothes\",\n  label: \"Clothes\"\n}, {\n  value: \"electronics\",\n  label: \"Electronics\"\n}, {\n  value: \"groceries\",\n  label: \"Groceries\"\n}, {\n  value: \"other\",\n  label: \"Other\"\n}];\nconst types = [{\n  value: \"expense\",\n  label: \"Expense\"\n}, {\n  value: \"income\",\n  label: \"Income\"\n}];\n\nconst TransactionsList = () => {\n  _s();\n\n  const [transactions, setTransactions] = useState([]);\n  const [openDrawer, setOpenDrawer] = useState(false);\n  useEffect(() => {\n    setTimeout(() => {\n      setTransactions(data);\n    }, 2000);\n  }, []);\n  const formatter = new Intl.NumberFormat(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\",\n    minimumFractionDigits: 2\n  });\n  const transactionSchema = Yup.object().shape({\n    name: Yup.string().required(\"Required field\"),\n    date: Yup.string().required(\"Required field\"),\n    amount: Yup.number().required(\"Required field\"),\n    category: Yup.string().required(\"Required field\"),\n    type: Yup.string().required(\"Required field\")\n  });\n\n  const handleDelete = id => {\n    const _transactions = [...transactions].filter(transaction => transaction.id !== id);\n\n    setTransactions(_transactions);\n  };\n\n  const addTransactionToList = data => {\n    console.log(\"Data\", data);\n    setTransactions([...transactions, { ...data\n    }]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(AddButtonWrapper, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: () => setOpenDrawer(true),\n        children: \"+ Add Transaction\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this), transactions.length > 0 ? /*#__PURE__*/_jsxDEV(Table, {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(HeadCell, {\n            children: \"Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(HeadCell, {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(HeadCell, {\n            children: \"Category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(HeadCell, {\n            children: \"Amount\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(HeadCell, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: transactions.map(({\n          id,\n          date,\n          name,\n          category,\n          type,\n          amount\n        }) => {\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: date\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: category\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(Amount, {\n                type: type,\n                children: formatter.format(amount)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: [/*#__PURE__*/_jsxDEV(EditIcon, {\n                style: {\n                  marginRight: \"16px\"\n                },\n                onClick: e => {\n                  console.log(\"I should open edit mode\");\n                  console.log(e, id);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(DeleteForeverIcon, {\n                style: {\n                  color: \"#FF7661\"\n                },\n                onClick: () => handleDelete(id)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 19\n            }, this)]\n          }, id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 9\n    }, this) : \"Loading....\", openDrawer && /*#__PURE__*/_jsxDEV(Drawer, {\n      anchor: \"right\",\n      open: openDrawer,\n      onClose: () => setOpenDrawer(false),\n      children: /*#__PURE__*/_jsxDEV(FormWrapper, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"New transaction\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Formik, {\n          initialValues: {\n            name: \"\",\n            amount: \"\",\n            date: \"\",\n            category: \"eating_out\",\n            type: \"\"\n          },\n          validationSchema: transactionSchema,\n          onSubmit: (values, {\n            setSubmitting\n          }) => {\n            console.log(\"Values onSubmit\", JSON.stringify(values));\n            addTransactionToList(values);\n            setSubmitting(false);\n            setOpenDrawer(false);\n          },\n          children: ({\n            values,\n            handleChange,\n            touched,\n            errors,\n            isValid,\n            isSubmitting\n          }) => /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(Form, {\n              children: [/*#__PURE__*/_jsxDEV(FieldsWrapper, {\n                children: [/*#__PURE__*/_jsxDEV(TextField, {\n                  fullWidth: true,\n                  id: \"name\",\n                  name: \"name\",\n                  label: \"Name\",\n                  value: values.name,\n                  onChange: handleChange,\n                  error: touched.name && Boolean(errors.name),\n                  helperText: touched.name && errors.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 218,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                  fullWidth: true,\n                  id: \"date\",\n                  name: \"date\",\n                  label: \"Date\",\n                  value: values.date,\n                  onChange: handleChange,\n                  error: touched.date && Boolean(errors.date),\n                  helperText: touched.date && errors.date\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 228,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                  fullWidth: true,\n                  id: \"amount\",\n                  type: \"number\",\n                  name: \"amount\",\n                  label: \"Amount\",\n                  value: values.amount,\n                  onChange: handleChange,\n                  error: touched.amount && Boolean(errors.amount),\n                  helperText: touched.amount && errors.amount\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 238,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 217,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(RadioOptionsWrapper, {\n                children: [/*#__PURE__*/_jsxDEV(FormControl, {\n                  component: \"fieldset\",\n                  children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                    component: \"legend\",\n                    children: \"Category\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 252,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(RadioGroup, {\n                    \"aria-label\": \"category\",\n                    name: \"category\",\n                    value: values.category,\n                    onChange: handleChange,\n                    children: categories.map(category => /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                      value: category.value,\n                      control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 262,\n                        columnNumber: 40\n                      }, this),\n                      label: category.label\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 260,\n                      columnNumber: 29\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 253,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 251,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                  component: \"fieldset\",\n                  children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                    component: \"legend\",\n                    children: \"Type\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 269,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(RadioGroup, {\n                    \"aria-label\": \"type\",\n                    name: \"type\",\n                    value: values.type,\n                    onChange: handleChange,\n                    children: types.map(({\n                      value,\n                      label\n                    }) => /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                      value: value,\n                      control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 279,\n                        columnNumber: 40\n                      }, this),\n                      label: label\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 277,\n                      columnNumber: 29\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 270,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 268,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 250,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(ActionsWrapper, {\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"outlined\",\n                  color: \"primary\",\n                  onClick: () => setOpenDrawer(false),\n                  children: \"Cancel\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 287,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"contained\",\n                  color: \"primary\",\n                  type: \"submit\",\n                  disabled: !isValid || isSubmitting,\n                  children: \"Save\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 294,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 286,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 19\n            }, this)\n          }, void 0, false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TransactionsList, \"0SZdetMWiuln6p+onSxnZ5XbF08=\");\n\n_c11 = TransactionsList;\nexport { TransactionsList };\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11;\n\n$RefreshReg$(_c, \"Table\");\n$RefreshReg$(_c2, \"HeadCell\");\n$RefreshReg$(_c3, \"TableCell\");\n$RefreshReg$(_c4, \"Amount\");\n$RefreshReg$(_c5, \"Container\");\n$RefreshReg$(_c6, \"AddButtonWrapper\");\n$RefreshReg$(_c7, \"FormWrapper\");\n$RefreshReg$(_c8, \"RadioOptionsWrapper\");\n$RefreshReg$(_c9, \"FieldsWrapper\");\n$RefreshReg$(_c10, \"ActionsWrapper\");\n$RefreshReg$(_c11, \"TransactionsList\");","map":{"version":3,"sources":["/Users/letiescanciano/Desktop/MITxPRO/trackex-app/live-session/src/components/Transactions/List/index.jsx"],"names":["React","useState","useEffect","styled","Yup","DeleteForeverIcon","EditIcon","Button","Drawer","TextField","Radio","RadioGroup","FormControlLabel","FormControl","FormLabel","Formik","Form","Debug","data","Table","table","HeadCell","td","TableCell","Amount","p","type","Container","div","AddButtonWrapper","FormWrapper","RadioOptionsWrapper","FieldsWrapper","ActionsWrapper","categories","value","label","types","TransactionsList","transactions","setTransactions","openDrawer","setOpenDrawer","setTimeout","formatter","Intl","NumberFormat","style","currency","minimumFractionDigits","transactionSchema","object","shape","name","string","required","date","amount","number","category","handleDelete","id","_transactions","filter","transaction","addTransactionToList","console","log","length","map","format","marginRight","e","color","values","setSubmitting","JSON","stringify","handleChange","touched","errors","isValid","isSubmitting","Boolean"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AAEA,OAAOC,iBAAP,MAA8B,kCAA9B;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AAEA,SAASC,MAAT,EAAiBC,IAAjB,QAA6B,QAA7B;AAEA,SAASC,KAAT,QAAsB,oBAAtB;AACA,OAAOC,IAAP,MAAiB,WAAjB;;;AAEA,MAAMC,KAAK,GAAGhB,MAAM,CAACiB,KAAM;AAC3B;AACA;AACA;AACA,CAJA;KAAMD,K;AAKN,MAAME,QAAQ,GAAGlB,MAAM,CAACmB,EAAG;AAC3B;AACA;AACA,CAHA;MAAMD,Q;AAKN,MAAME,SAAS,GAAGpB,MAAM,CAACmB,EAAG;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CARA;MAAMC,S;AAUN,MAAMC,MAAM,GAAGrB,MAAM,CAACsB,CAAE;AACxB,WAAW,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAeA,IAAI,KAAK,SAAT,GAAqB,SAArB,GAAiC,SAAW;AACtE,CAFA;MAAMF,M;AAIN,MAAMG,SAAS,GAAGxB,MAAM,CAACyB,GAAI;AAC7B;AACA;AACA,CAHA;MAAMD,S;AAKN,MAAME,gBAAgB,GAAG1B,MAAM,CAACyB,GAAI;AACpC;AACA;AACA,CAHA;MAAMC,gB;AAKN,MAAMC,WAAW,GAAG3B,MAAM,CAACyB,GAAI;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA,CAPA;MAAME,W;AASN,MAAMC,mBAAmB,GAAG5B,MAAM,CAACyB,GAAI;AACvC;AACA;AACA,CAHA;MAAMG,mB;AAKN,MAAMC,aAAa,GAAG7B,MAAM,CAACyB,GAAI;AACjC;AACA;AACA;AACA,CAJA;MAAMI,a;AAMN,MAAMC,cAAc,GAAG9B,MAAM,CAACyB,GAAI;AAClC;AACA;AACA,CAHA;OAAMK,c;AAKN,MAAMC,UAAU,GAAG,CACjB;AAAEC,EAAAA,KAAK,EAAE,YAAT;AAAuBC,EAAAA,KAAK,EAAE;AAA9B,CADiB,EAEjB;AAAED,EAAAA,KAAK,EAAE,SAAT;AAAoBC,EAAAA,KAAK,EAAE;AAA3B,CAFiB,EAGjB;AAAED,EAAAA,KAAK,EAAE,aAAT;AAAwBC,EAAAA,KAAK,EAAE;AAA/B,CAHiB,EAIjB;AAAED,EAAAA,KAAK,EAAE,WAAT;AAAsBC,EAAAA,KAAK,EAAE;AAA7B,CAJiB,EAKjB;AAAED,EAAAA,KAAK,EAAE,OAAT;AAAkBC,EAAAA,KAAK,EAAE;AAAzB,CALiB,CAAnB;AAQA,MAAMC,KAAK,GAAG,CACZ;AAAEF,EAAAA,KAAK,EAAE,SAAT;AAAoBC,EAAAA,KAAK,EAAE;AAA3B,CADY,EAEZ;AAAED,EAAAA,KAAK,EAAE,QAAT;AAAmBC,EAAAA,KAAK,EAAE;AAA1B,CAFY,CAAd;;AAKA,MAAME,gBAAgB,GAAG,MAAM;AAAA;;AAC7B,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCvC,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACwC,UAAD,EAAaC,aAAb,IAA8BzC,QAAQ,CAAC,KAAD,CAA5C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdyC,IAAAA,UAAU,CAAC,MAAM;AACfH,MAAAA,eAAe,CAACtB,IAAD,CAAf;AACD,KAFS,EAEP,IAFO,CAAV;AAGD,GAJQ,EAIN,EAJM,CAAT;AAMA,QAAM0B,SAAS,GAAG,IAAIC,IAAI,CAACC,YAAT,CAAsB,OAAtB,EAA+B;AAC/CC,IAAAA,KAAK,EAAE,UADwC;AAE/CC,IAAAA,QAAQ,EAAE,KAFqC;AAG/CC,IAAAA,qBAAqB,EAAE;AAHwB,GAA/B,CAAlB;AAMA,QAAMC,iBAAiB,GAAG9C,GAAG,CAAC+C,MAAJ,GAAaC,KAAb,CAAmB;AAC3CC,IAAAA,IAAI,EAAEjD,GAAG,CAACkD,MAAJ,GAAaC,QAAb,CAAsB,gBAAtB,CADqC;AAE3CC,IAAAA,IAAI,EAAEpD,GAAG,CAACkD,MAAJ,GAAaC,QAAb,CAAsB,gBAAtB,CAFqC;AAG3CE,IAAAA,MAAM,EAAErD,GAAG,CAACsD,MAAJ,GAAaH,QAAb,CAAsB,gBAAtB,CAHmC;AAI3CI,IAAAA,QAAQ,EAAEvD,GAAG,CAACkD,MAAJ,GAAaC,QAAb,CAAsB,gBAAtB,CAJiC;AAK3C7B,IAAAA,IAAI,EAAEtB,GAAG,CAACkD,MAAJ,GAAaC,QAAb,CAAsB,gBAAtB;AALqC,GAAnB,CAA1B;;AAQA,QAAMK,YAAY,GAAIC,EAAD,IAAQ;AAC3B,UAAMC,aAAa,GAAG,CAAC,GAAGvB,YAAJ,EAAkBwB,MAAlB,CACnBC,WAAD,IAAiBA,WAAW,CAACH,EAAZ,KAAmBA,EADhB,CAAtB;;AAGArB,IAAAA,eAAe,CAACsB,aAAD,CAAf;AACD,GALD;;AAOA,QAAMG,oBAAoB,GAAI/C,IAAD,IAAU;AACrCgD,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBjD,IAApB;AACAsB,IAAAA,eAAe,CAAC,CAAC,GAAGD,YAAJ,EAAkB,EAAE,GAAGrB;AAAL,KAAlB,CAAD,CAAf;AACD,GAHD;;AAIA,sBACE,QAAC,SAAD;AAAA,4BACE,QAAC,gBAAD;AAAA,6BACE,QAAC,MAAD;AACE,QAAA,OAAO,EAAC,WADV;AAEE,QAAA,KAAK,EAAC,SAFR;AAGE,QAAA,OAAO,EAAE,MAAMwB,aAAa,CAAC,IAAD,CAH9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,EAUGH,YAAY,CAAC6B,MAAb,GAAsB,CAAtB,gBACC,QAAC,KAAD;AAAA,8BACE;AAAA,+BACE;AAAA,kCACE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF,eAIE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF,eAKE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,kBALF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAUE;AAAA,kBACG7B,YAAY,CAAC8B,GAAb,CAAiB,CAAC;AAAER,UAAAA,EAAF;AAAML,UAAAA,IAAN;AAAYH,UAAAA,IAAZ;AAAkBM,UAAAA,QAAlB;AAA4BjC,UAAAA,IAA5B;AAAkC+B,UAAAA;AAAlC,SAAD,KAAgD;AAChE,8BACE;AAAA,oCACE,QAAC,SAAD;AAAA,wBAAYD;AAAZ;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE,QAAC,SAAD;AAAA,wBAAYH;AAAZ;AAAA;AAAA;AAAA;AAAA,oBAFF,eAGE,QAAC,SAAD;AAAA,wBAAYM;AAAZ;AAAA;AAAA;AAAA;AAAA,oBAHF,eAIE,QAAC,SAAD;AAAA,qCACE,QAAC,MAAD;AAAQ,gBAAA,IAAI,EAAEjC,IAAd;AAAA,0BAAqBkB,SAAS,CAAC0B,MAAV,CAAiBb,MAAjB;AAArB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBAJF,eAOE,QAAC,SAAD;AAAA,sCACE,QAAC,QAAD;AACE,gBAAA,KAAK,EAAE;AAAEc,kBAAAA,WAAW,EAAE;AAAf,iBADT;AAEE,gBAAA,OAAO,EAAGC,CAAD,IAAO;AACdN,kBAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AACAD,kBAAAA,OAAO,CAACC,GAAR,CAAYK,CAAZ,EAAeX,EAAf;AACD;AALH;AAAA;AAAA;AAAA;AAAA,sBADF,eAQE,QAAC,iBAAD;AACE,gBAAA,KAAK,EAAE;AAAEY,kBAAAA,KAAK,EAAE;AAAT,iBADT;AAEE,gBAAA,OAAO,EAAE,MAAMb,YAAY,CAACC,EAAD;AAF7B;AAAA;AAAA;AAAA;AAAA,sBARF;AAAA;AAAA;AAAA;AAAA;AAAA,oBAPF;AAAA,aAASA,EAAT;AAAA;AAAA;AAAA;AAAA,kBADF;AAuBD,SAxBA;AADH;AAAA;AAAA;AAAA;AAAA,cAVF;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,GAwCC,aAlDJ,EAqDGpB,UAAU,iBACT,QAAC,MAAD;AACE,MAAA,MAAM,EAAC,OADT;AAEE,MAAA,IAAI,EAAEA,UAFR;AAGE,MAAA,OAAO,EAAE,MAAMC,aAAa,CAAC,KAAD,CAH9B;AAAA,6BAKE,QAAC,WAAD;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,MAAD;AACE,UAAA,aAAa,EAAE;AACbW,YAAAA,IAAI,EAAE,EADO;AAEbI,YAAAA,MAAM,EAAE,EAFK;AAGbD,YAAAA,IAAI,EAAE,EAHO;AAIbG,YAAAA,QAAQ,EAAE,YAJG;AAKbjC,YAAAA,IAAI,EAAE;AALO,WADjB;AAQE,UAAA,gBAAgB,EAAEwB,iBARpB;AASE,UAAA,QAAQ,EAAE,CAACwB,MAAD,EAAS;AAAEC,YAAAA;AAAF,WAAT,KAA+B;AACvCT,YAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BS,IAAI,CAACC,SAAL,CAAeH,MAAf,CAA/B;AACAT,YAAAA,oBAAoB,CAACS,MAAD,CAApB;AACAC,YAAAA,aAAa,CAAC,KAAD,CAAb;AACAjC,YAAAA,aAAa,CAAC,KAAD,CAAb;AACD,WAdH;AAAA,oBAgBG,CAAC;AACAgC,YAAAA,MADA;AAEAI,YAAAA,YAFA;AAGAC,YAAAA,OAHA;AAIAC,YAAAA,MAJA;AAKAC,YAAAA,OALA;AAMAC,YAAAA;AANA,WAAD,kBAQC;AAAA,mCACE,QAAC,IAAD;AAAA,sCACE,QAAC,aAAD;AAAA,wCACE,QAAC,SAAD;AACE,kBAAA,SAAS,MADX;AAEE,kBAAA,EAAE,EAAC,MAFL;AAGE,kBAAA,IAAI,EAAC,MAHP;AAIE,kBAAA,KAAK,EAAC,MAJR;AAKE,kBAAA,KAAK,EAAER,MAAM,CAACrB,IALhB;AAME,kBAAA,QAAQ,EAAEyB,YANZ;AAOE,kBAAA,KAAK,EAAEC,OAAO,CAAC1B,IAAR,IAAgB8B,OAAO,CAACH,MAAM,CAAC3B,IAAR,CAPhC;AAQE,kBAAA,UAAU,EAAE0B,OAAO,CAAC1B,IAAR,IAAgB2B,MAAM,CAAC3B;AARrC;AAAA;AAAA;AAAA;AAAA,wBADF,eAWE,QAAC,SAAD;AACE,kBAAA,SAAS,MADX;AAEE,kBAAA,EAAE,EAAC,MAFL;AAGE,kBAAA,IAAI,EAAC,MAHP;AAIE,kBAAA,KAAK,EAAC,MAJR;AAKE,kBAAA,KAAK,EAAEqB,MAAM,CAAClB,IALhB;AAME,kBAAA,QAAQ,EAAEsB,YANZ;AAOE,kBAAA,KAAK,EAAEC,OAAO,CAACvB,IAAR,IAAgB2B,OAAO,CAACH,MAAM,CAACxB,IAAR,CAPhC;AAQE,kBAAA,UAAU,EAAEuB,OAAO,CAACvB,IAAR,IAAgBwB,MAAM,CAACxB;AARrC;AAAA;AAAA;AAAA;AAAA,wBAXF,eAqBE,QAAC,SAAD;AACE,kBAAA,SAAS,MADX;AAEE,kBAAA,EAAE,EAAC,QAFL;AAGE,kBAAA,IAAI,EAAC,QAHP;AAIE,kBAAA,IAAI,EAAC,QAJP;AAKE,kBAAA,KAAK,EAAC,QALR;AAME,kBAAA,KAAK,EAAEkB,MAAM,CAACjB,MANhB;AAOE,kBAAA,QAAQ,EAAEqB,YAPZ;AAQE,kBAAA,KAAK,EAAEC,OAAO,CAACtB,MAAR,IAAkB0B,OAAO,CAACH,MAAM,CAACvB,MAAR,CARlC;AASE,kBAAA,UAAU,EAAEsB,OAAO,CAACtB,MAAR,IAAkBuB,MAAM,CAACvB;AATvC;AAAA;AAAA;AAAA;AAAA,wBArBF;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAkCE,QAAC,mBAAD;AAAA,wCACE,QAAC,WAAD;AAAa,kBAAA,SAAS,EAAC,UAAvB;AAAA,0CACE,QAAC,SAAD;AAAW,oBAAA,SAAS,EAAC,QAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,eAEE,QAAC,UAAD;AACE,kCAAW,UADb;AAEE,oBAAA,IAAI,EAAC,UAFP;AAGE,oBAAA,KAAK,EAAEiB,MAAM,CAACf,QAHhB;AAIE,oBAAA,QAAQ,EAAEmB,YAJZ;AAAA,8BAMG5C,UAAU,CAACmC,GAAX,CAAgBV,QAAD,iBACd,QAAC,gBAAD;AACE,sBAAA,KAAK,EAAEA,QAAQ,CAACxB,KADlB;AAEE,sBAAA,OAAO,eAAE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,8BAFX;AAGE,sBAAA,KAAK,EAAEwB,QAAQ,CAACvB;AAHlB;AAAA;AAAA;AAAA;AAAA,4BADD;AANH;AAAA;AAAA;AAAA;AAAA,0BAFF;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAkBE,QAAC,WAAD;AAAa,kBAAA,SAAS,EAAC,UAAvB;AAAA,0CACE,QAAC,SAAD;AAAW,oBAAA,SAAS,EAAC,QAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,eAEE,QAAC,UAAD;AACE,kCAAW,MADb;AAEE,oBAAA,IAAI,EAAC,MAFP;AAGE,oBAAA,KAAK,EAAEsC,MAAM,CAAChD,IAHhB;AAIE,oBAAA,QAAQ,EAAEoD,YAJZ;AAAA,8BAMGzC,KAAK,CAACgC,GAAN,CAAU,CAAC;AAAElC,sBAAAA,KAAF;AAASC,sBAAAA;AAAT,qBAAD,kBACT,QAAC,gBAAD;AACE,sBAAA,KAAK,EAAED,KADT;AAEE,sBAAA,OAAO,eAAE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,8BAFX;AAGE,sBAAA,KAAK,EAAEC;AAHT;AAAA;AAAA;AAAA;AAAA,4BADD;AANH;AAAA;AAAA;AAAA;AAAA,0BAFF;AAAA;AAAA;AAAA;AAAA;AAAA,wBAlBF;AAAA;AAAA;AAAA;AAAA;AAAA,sBAlCF,eAsEE,QAAC,cAAD;AAAA,wCACE,QAAC,MAAD;AACE,kBAAA,OAAO,EAAC,UADV;AAEE,kBAAA,KAAK,EAAC,SAFR;AAGE,kBAAA,OAAO,EAAE,MAAMM,aAAa,CAAC,KAAD,CAH9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAQE,QAAC,MAAD;AACE,kBAAA,OAAO,EAAC,WADV;AAEE,kBAAA,KAAK,EAAC,SAFR;AAGE,kBAAA,IAAI,EAAC,QAHP;AAIE,kBAAA,QAAQ,EAAE,CAACuC,OAAD,IAAYC,YAJxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBARF;AAAA;AAAA;AAAA;AAAA;AAAA,sBAtEF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAxBJ;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA,YAtDJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAwLD,CA3ND;;GAAM5C,gB;;OAAAA,gB;AA6NN,SAASA,gBAAT","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nimport styled from \"styled-components\";\nimport * as Yup from \"yup\";\n\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport Button from \"@material-ui/core/Button\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\n\nimport { Formik, Form } from \"formik\";\n\nimport { Debug } from \"../../../aux/Debug\";\nimport data from \"./data.js\";\n\nconst Table = styled.table`\n  width: 100%;\n  text-align: left;\n  padding: 16px 0;\n`;\nconst HeadCell = styled.td`\n  padding: 16px 0;\n  width: 20%;\n`;\n\nconst TableCell = styled.td`\n  padding: 8px 0;\n  width: 23%;\n  &(:last-of-type) {\n    display: flex;\n    justify-content: flex-end;\n    width: 8%;\n  }\n`;\n\nconst Amount = styled.p`\n  color: ${({ type }) => (type === \"expense\" ? \"#FF7661\" : \"#00E4C6\")};\n`;\n\nconst Container = styled.div`\n  width: 100%;\n  padding: 64px;\n`;\n\nconst AddButtonWrapper = styled.div`\n  display: flex;\n  justify-content: flex-end;\n`;\n\nconst FormWrapper = styled.div`\n  padding: 16px;\n  width: 380px;\n  height: 100vh;\n  overflow: scroll;\n  background-color: #252f3d;\n  color: white;\n`;\n\nconst RadioOptionsWrapper = styled.div`\n  display: flex;\n  padding-top: 24px;\n`;\n\nconst FieldsWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n`;\n\nconst ActionsWrapper = styled.div`\n  display: flex;\n  justify-content: space-evenly;\n`;\n\nconst categories = [\n  { value: \"eating_out\", label: \"Eating out\" },\n  { value: \"clothes\", label: \"Clothes\" },\n  { value: \"electronics\", label: \"Electronics\" },\n  { value: \"groceries\", label: \"Groceries\" },\n  { value: \"other\", label: \"Other\" },\n];\n\nconst types = [\n  { value: \"expense\", label: \"Expense\" },\n  { value: \"income\", label: \"Income\" },\n];\n\nconst TransactionsList = () => {\n  const [transactions, setTransactions] = useState([]);\n  const [openDrawer, setOpenDrawer] = useState(false);\n\n  useEffect(() => {\n    setTimeout(() => {\n      setTransactions(data);\n    }, 2000);\n  }, []);\n\n  const formatter = new Intl.NumberFormat(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\",\n    minimumFractionDigits: 2,\n  });\n\n  const transactionSchema = Yup.object().shape({\n    name: Yup.string().required(\"Required field\"),\n    date: Yup.string().required(\"Required field\"),\n    amount: Yup.number().required(\"Required field\"),\n    category: Yup.string().required(\"Required field\"),\n    type: Yup.string().required(\"Required field\"),\n  });\n\n  const handleDelete = (id) => {\n    const _transactions = [...transactions].filter(\n      (transaction) => transaction.id !== id\n    );\n    setTransactions(_transactions);\n  };\n\n  const addTransactionToList = (data) => {\n    console.log(\"Data\", data);\n    setTransactions([...transactions, { ...data }]);\n  };\n  return (\n    <Container>\n      <AddButtonWrapper>\n        <Button\n          variant='contained'\n          color='primary'\n          onClick={() => setOpenDrawer(true)}\n        >\n          + Add Transaction\n        </Button>\n      </AddButtonWrapper>\n      {transactions.length > 0 ? (\n        <Table>\n          <thead>\n            <tr>\n              <HeadCell>Date</HeadCell>\n              <HeadCell>Name</HeadCell>\n              <HeadCell>Category</HeadCell>\n              <HeadCell>Amount</HeadCell>\n              <HeadCell></HeadCell>\n            </tr>\n          </thead>\n          <tbody>\n            {transactions.map(({ id, date, name, category, type, amount }) => {\n              return (\n                <tr key={id}>\n                  <TableCell>{date}</TableCell>\n                  <TableCell>{name}</TableCell>\n                  <TableCell>{category}</TableCell>\n                  <TableCell>\n                    <Amount type={type}>{formatter.format(amount)}</Amount>\n                  </TableCell>\n                  <TableCell>\n                    <EditIcon\n                      style={{ marginRight: \"16px\" }}\n                      onClick={(e) => {\n                        console.log(\"I should open edit mode\");\n                        console.log(e, id);\n                      }}\n                    />\n                    <DeleteForeverIcon\n                      style={{ color: \"#FF7661\" }}\n                      onClick={() => handleDelete(id)}\n                    />\n                  </TableCell>\n                </tr>\n              );\n            })}\n          </tbody>\n        </Table>\n      ) : (\n        \"Loading....\"\n      )}\n\n      {openDrawer && (\n        <Drawer\n          anchor='right'\n          open={openDrawer}\n          onClose={() => setOpenDrawer(false)}\n        >\n          <FormWrapper>\n            <h2>New transaction</h2>\n            <Formik\n              initialValues={{\n                name: \"\",\n                amount: \"\",\n                date: \"\",\n                category: \"eating_out\",\n                type: \"\",\n              }}\n              validationSchema={transactionSchema}\n              onSubmit={(values, { setSubmitting }) => {\n                console.log(\"Values onSubmit\", JSON.stringify(values));\n                addTransactionToList(values);\n                setSubmitting(false);\n                setOpenDrawer(false);\n              }}\n            >\n              {({\n                values,\n                handleChange,\n                touched,\n                errors,\n                isValid,\n                isSubmitting,\n              }) => (\n                <>\n                  <Form>\n                    <FieldsWrapper>\n                      <TextField\n                        fullWidth\n                        id='name'\n                        name='name'\n                        label='Name'\n                        value={values.name}\n                        onChange={handleChange}\n                        error={touched.name && Boolean(errors.name)}\n                        helperText={touched.name && errors.name}\n                      />\n                      <TextField\n                        fullWidth\n                        id='date'\n                        name='date'\n                        label='Date'\n                        value={values.date}\n                        onChange={handleChange}\n                        error={touched.date && Boolean(errors.date)}\n                        helperText={touched.date && errors.date}\n                      />\n                      <TextField\n                        fullWidth\n                        id='amount'\n                        type='number'\n                        name='amount'\n                        label='Amount'\n                        value={values.amount}\n                        onChange={handleChange}\n                        error={touched.amount && Boolean(errors.amount)}\n                        helperText={touched.amount && errors.amount}\n                      />\n                    </FieldsWrapper>\n                    <RadioOptionsWrapper>\n                      <FormControl component='fieldset'>\n                        <FormLabel component='legend'>Category</FormLabel>\n                        <RadioGroup\n                          aria-label='category'\n                          name='category'\n                          value={values.category}\n                          onChange={handleChange}\n                        >\n                          {categories.map((category) => (\n                            <FormControlLabel\n                              value={category.value}\n                              control={<Radio />}\n                              label={category.label}\n                            />\n                          ))}\n                        </RadioGroup>\n                      </FormControl>\n                      <FormControl component='fieldset'>\n                        <FormLabel component='legend'>Type</FormLabel>\n                        <RadioGroup\n                          aria-label='type'\n                          name='type'\n                          value={values.type}\n                          onChange={handleChange}\n                        >\n                          {types.map(({ value, label }) => (\n                            <FormControlLabel\n                              value={value}\n                              control={<Radio />}\n                              label={label}\n                            />\n                          ))}\n                        </RadioGroup>\n                      </FormControl>\n                    </RadioOptionsWrapper>\n                    <ActionsWrapper>\n                      <Button\n                        variant='outlined'\n                        color='primary'\n                        onClick={() => setOpenDrawer(false)}\n                      >\n                        Cancel\n                      </Button>\n                      <Button\n                        variant='contained'\n                        color='primary'\n                        type='submit'\n                        disabled={!isValid || isSubmitting}\n                      >\n                        Save\n                      </Button>\n                    </ActionsWrapper>\n                  </Form>\n                  {/* <Debug /> */}\n                </>\n              )}\n            </Formik>\n          </FormWrapper>\n        </Drawer>\n      )}\n    </Container>\n  );\n};\n\nexport { TransactionsList };\n"]},"metadata":{},"sourceType":"module"}